[{"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\index.tsx":"1","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\reportWebVitals.ts":"2","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\store.ts":"3","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\App.tsx":"4","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\todolists-reducer.ts":"5","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\TodolistsList.tsx":"7","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\api\\todolists-api.ts":"8","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\app-reducer.ts":"13","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"14","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\Login\\Login.tsx":"15"},{"size":749,"mtime":1616955922154,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607869388000,"results":"18","hashOfConfig":"17"},{"size":1098,"mtime":1616174637817,"results":"19","hashOfConfig":"17"},{"size":1679,"mtime":1616956430577,"results":"20","hashOfConfig":"17"},{"size":4955,"mtime":1616265598502,"results":"21","hashOfConfig":"17"},{"size":5486,"mtime":1616353187412,"results":"22","hashOfConfig":"17"},{"size":3797,"mtime":1616262274519,"results":"23","hashOfConfig":"17"},{"size":2582,"mtime":1616173226301,"results":"24","hashOfConfig":"17"},{"size":4015,"mtime":1616267465320,"results":"25","hashOfConfig":"17"},{"size":1634,"mtime":1616266427886,"results":"26","hashOfConfig":"17"},{"size":1773,"mtime":1596295538000,"results":"27","hashOfConfig":"17"},{"size":952,"mtime":1594154724000,"results":"28","hashOfConfig":"17"},{"size":1044,"mtime":1616239638596,"results":"29","hashOfConfig":"17"},{"size":1003,"mtime":1616240241689,"results":"30","hashOfConfig":"17"},{"size":2981,"mtime":1616962087975,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rqeums",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\index.tsx",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\reportWebVitals.ts",[],["67","68"],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\store.ts",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\App.tsx",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\TodolistsList.tsx",["69","70","71","72","73","74","75","76"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\n\r\nexport const TodolistsList: React.FC = () => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                id={tl.id}\r\n                                title={tl.title}\r\n                                filter={tl.filter}\r\n                                entityStatus={tl.entityStatus}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\api\\todolists-api.ts",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["77","78","79","80","81","82"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    entityStatus: RequestStatusType\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus === 'loading'} >\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} entityStatus={props.entityStatus}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\AddItemForm\\AddItemForm.tsx",["83","84","85"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    entityStatus?: RequestStatusType\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n                   disabled={props.entityStatus === 'loading'}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["86","87","88"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\app\\app-reducer.ts",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"C:\\IT-incubator\\it-incubator-todolist-ts-01\\src\\features\\Login\\Login.tsx",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":27,"column":8,"nodeType":"96","endLine":27,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":32,"column":8,"nodeType":"96","endLine":32,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"98","line":37,"column":8,"nodeType":"96","endLine":37,"endColumn":10,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"98","line":42,"column":8,"nodeType":"96","endLine":42,"endColumn":10,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"98","line":47,"column":8,"nodeType":"96","endLine":47,"endColumn":10,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"98","line":52,"column":8,"nodeType":"96","endLine":52,"endColumn":10,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"98","line":57,"column":8,"nodeType":"96","endLine":57,"endColumn":10,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"98","line":62,"column":8,"nodeType":"96","endLine":62,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":36,"column":8,"nodeType":"96","endLine":36,"endColumn":10,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":40,"column":8,"nodeType":"96","endLine":40,"endColumn":33,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"108","line":47,"column":8,"nodeType":"96","endLine":47,"endColumn":45,"suggestions":"110"},{"ruleId":"94","severity":1,"message":"108","line":49,"column":86,"nodeType":"96","endLine":49,"endColumn":116,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"108","line":50,"column":92,"nodeType":"96","endLine":50,"endColumn":122,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"108","line":51,"column":98,"nodeType":"96","endLine":51,"endColumn":128,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":2,"column":14,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"119","line":2,"column":22,"nodeType":"116","messageId":"117","endLine":2,"endColumn":33},{"ruleId":"94","severity":1,"message":"108","line":15,"column":97,"nodeType":"96","endLine":15,"endColumn":130,"suggestions":"120"},{"ruleId":"94","severity":1,"message":"108","line":20,"column":8,"nodeType":"96","endLine":20,"endColumn":41,"suggestions":"121"},{"ruleId":"94","severity":1,"message":"108","line":24,"column":8,"nodeType":"96","endLine":24,"endColumn":41,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":39,"column":29,"nodeType":"125","endLine":40,"endColumn":50},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["129"],["130"],["131"],["132"],["133"],["134"],["135"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["136"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["137"],["138"],["139"],["140"],["141"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["142"],["143"],["144"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"145","fix":"148"},{"desc":"145","fix":"149"},{"desc":"145","fix":"150"},{"desc":"145","fix":"151"},{"desc":"145","fix":"152"},{"desc":"145","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},{"desc":"156","fix":"159"},{"desc":"156","fix":"160"},{"desc":"156","fix":"161"},{"desc":"156","fix":"162"},{"desc":"156","fix":"163"},{"desc":"156","fix":"164"},"Update the dependencies array to be: [dispatch]",{"range":"165","text":"166"},{"range":"167","text":"166"},{"range":"168","text":"166"},{"range":"169","text":"166"},{"range":"170","text":"166"},{"range":"171","text":"166"},{"range":"172","text":"166"},{"range":"173","text":"166"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"174","text":"175"},"Update the dependencies array to be: [props]",{"range":"176","text":"177"},{"range":"178","text":"177"},{"range":"179","text":"177"},{"range":"180","text":"177"},{"range":"181","text":"177"},{"range":"182","text":"177"},{"range":"183","text":"177"},{"range":"184","text":"177"},[1049,1051],"[dispatch]",[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[1475,1477],"[dispatch, props.id]",[1583,1608],"[props]",[1821,1858],[1948,1978],[2072,2102],[2202,2232],[765,798],[1071,1104],[1261,1294]]